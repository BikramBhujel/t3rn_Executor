The t3rn executor is a critical component of the t3rn platform, enabling seamless execution of cross-chain smart contracts. This guide walks you through the step-by-step configuration and commands required to set up and run the executor effectively.

Prerequisites
Before proceeding, ensure you have the following:

Linux Environment: This guide assumes you're running commands on a Linux machine.
Private Key: Your private key is necessary for executing operations securely.
Network Information: Details about the blockchain networks you'll be interacting with, including RPC endpoints if you plan to use custom configurations.

Step-by-Step Configuration

Step 1: Download the Executor Package

Download the latest executor release using the wget command:

wget https://github.com/t3rn/executor-release/releases/download/v0.32.0/executor-linux-v0.32.0.tar.gz  

Step 2: Extract the Package
Unpack the downloaded tarball file:

tar -xvzf executor-linux-v0.32.0.tar.gz  

Step 3: Navigate to the Executor Directory
Move into the executor binary directory:

cd executor/executor/bin  

Setting Environment Variables
Required Variables
Set up the necessary environment variables to configure the executor:

export NODE_ENV=testnet  
export LOG_LEVEL=debug  
export LOG_PRETTY=false  
export EXECUTOR_PROCESS_ORDERS=true  
export EXECUTOR_PROCESS_CLAIMS=true  
export EXECUTOR_MAX_L3_GAS_PRICE=1000  
export PRIVATE_KEY_LOCAL=Your_Private_Key  
export ENABLED_NETWORKS='arbitrum-sepolia,base-sepolia,optimism-sepolia,l1rn'  


Optional: Running Specific Networks
If you want the executor to handle only specific networks, update the ENABLED_NETWORKS variable. For example, to run the executor for Base and Optimism Sepolia:

export ENABLED_NETWORKS='base-sepolia,optimism-sepolia,l1rn'  

_________________________________________________________________________________________________________________________________________________________________________________________
Configuring Custom RPC Endpoints
You can add custom RPC URLs for specific networks. This step is optional; the executor will use default RPC URLs if you skip this.

Adding Custom RPC URLs
Replace NETWORK_NAME with the appropriate network identifier and specify the URLs: export RPC_ENDPOINTS_${NETWORK_NAME}='https://url1.io,https://url2.io'  

Example for Arbitrum Sepolia:
export RPC_ENDPOINTS_ARBT='https://arb-sepolia.g.alchemy.com/v2/your_id,https://url2.io'  

Supported Network Names:
arbt: Arbitrum Sepolia
bssp: Base Sepolia
blss: Blast Sepolia
opsp: Optimism Sepolia
Example for Supported Networks

export RPC_ENDPOINTS_BSSP='https://base-sepolia.g.alchemy.com/v2/your_id'  
export RPC_ENDPOINTS_BLSS='https://blast-sepolia.g.alchemy.com/v2/your_id'  
export RPC_ENDPOINTS_OPSP='https://opt-sepolia.g.alchemy.com/v2/your_id'  
export RPC_ENDPOINTS_ARBT='https://arb-sepolia.g.alchemy.com/v2/your_id'  
_________________________________________________________________________________________________________________________________________________________________________________________

export EXECUTOR_PROCESS_PENDING_ORDERS_FROM_API=false  

Running the Executor
Once all configurations are complete, execute the following command to start the executor:

./executor  



Notes
Ensure all environment variables are set correctly before running the executor.
For private keys and sensitive information, use secure storage mechanisms to avoid accidental exposure.
If you encounter issues, double-check the network and RPC configurations.






